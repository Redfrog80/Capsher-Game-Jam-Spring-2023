import pygame
import random

# Define constants
SCREEN_WIDTH = 640
SCREEN_HEIGHT = 480
ENEMY_SHIP_IMAGE = "enemy_ship.png"
BULLET_IMAGE = "bullet.png"

pygame.init()
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Asteroids Clone")

enemy_ship_img = pygame.image.load("images/gameImage.png")
player_img = pygame.image.load("images/gameImage.png")
bullet_img = pygame.image.load("images/gameImage.png")

class EnemyShip(pygame.sprite.Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = enemy_ship_img
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.speed = random.randint(1, 3)
        self.bullet_timer = 0

    def update(self):
        self.rect.move_ip(0, self.speed)
        self.bullet_timer += 1
        if self.bullet_timer >= 60:
            self.bullet_timer = 0
            bullet = Bullet(self.rect.centerx, self.rect.bottom)
            all_sprites.add(bullet)
            enemy_bullets.add(bullet)

class Bullet(pygame.sprite.Sprite):
    def __init__(self, x, y):
        super().__init__()
        self.image = bullet_img
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.speed = 5

    def update(self):
        self.rect.move_ip(0, -self.speed)
        if self.rect.bottom < 0 or self.rect.top > SCREEN_HEIGHT:
            self.kill()

# In the main game loop:
all_sprites = pygame.sprite.Group()
enemy_ships = pygame.sprite.Group()
enemy_bullets = pygame.sprite.Group()

for i in range(5):
    enemy = EnemyShip(random.randint(0, SCREEN_WIDTH), 0)
    all_sprites.add(enemy)
    enemy_ships.add(enemy)

player = pygame.sprite.Sprite()
player.image = pygame.Surface((50, 50))
player.image.fill((0, 0, 255))
player.rect = player.image.get_rect()
player.rect.centerx = SCREEN_WIDTH // 2
player.rect.bottom = SCREEN_HEIGHT - 10

all_sprites.add(player)

clock = pygame.time.Clock()
game_over = False

while not game_over:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT or event.key == pygame.K_a:
                player.rect.move_ip(-5, 0)
            elif event.key == pygame.K_RIGHT or event.key == pygame.K_d:
                player.rect.move_ip(5, 0)
            elif event.key == pygame.K_SPACE:
                bullet = Bullet(player.rect.centerx, player.rect.top)
                all_sprites.add(bullet)
        elif event.type == pygame.USEREVENT:
            enemy = EnemyShip(random.randint(0, SCREEN_WIDTH), 0)
            all_sprites.add(enemy)
            enemy_ships.add(enemy)

    # Update all sprites
    all_sprites.update()

    # Check for collisions between player and enemy ships
    hits = pygame.sprite.spritecollide(player, enemy_ships, False)
    if hits:
        # Handle player getting hit by enemy ships
        print("The player has hit an enemy")
        #game_over = True
        
        # Check for collisions between player bullets and enemy ships
    hits = pygame.sprite.groupcollide(player, enemy_bullets, True, True)
    for hit in hits:
        print("The player has been hit by a bullet")
        #game_over = True

    # Check for collisions between player bullets and enemy ships
    hits = pygame.sprite.groupcollide(enemy_ships, enemy_bullets, True, True)
    for hit in hits:
        print("An enemy has been hit")
    